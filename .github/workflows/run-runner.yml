name: Parallel Rydberg Simulations

on:
  workflow_dispatch:
    inputs:
      number_of_circuits:
        description: Total circuits to run
        default: 100
        type: number
      batch_size:
        description: States per batch
        default: 10
        type: number
      time_to_run:
        description: Time to run
        default: 1000
        type: number
      mid_site:
        description: Index of central site
        default: 4
        type: number
      Lx:
        description: Lx dimension
        default: 3
        type: number
      Ly:
        description: Ly dimension
        default: 3
        type: number

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.make-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Calculate batch-matrix
        id: make-matrix
        run: |
          # read dispatch inputs
          N=${{ github.event.inputs.number_of_circuits }}
          b=${{ github.event.inputs.batch_size }}

          # compute number of batches (ceiling division)
          M=$(( (N + b - 1) / b ))

          # build JSON array: [{"batch_index":0}, {"batch_index":1}, â€¦]
          json="["
          for i in $(seq 0 $((M - 1))); do
            json+="{\"batch_index\":$i}"
            if [ "$i" -lt $((M - 1)) ]; then
              json+=","
            fi
          done
          json+="]"

          echo "Generated matrix JSON: $json"

          # export to $GITHUB_OUTPUT for downstream
          echo "matrix=$json" >> $GITHUB_OUTPUT

  run-batch:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 180  # Increased to 3 hours
    strategy:
      matrix:
        include: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install quspin numpy scipy tqdm sympy imageio psutil

      - name: Check memory before
        run: free -m

      - name: Debug - Show input parameters
        run: |
          echo "=== DEBUG: Input Parameters ==="
          echo "number_of_circuits: ${{ github.event.inputs.number_of_circuits }}"
          echo "batch_size: ${{ github.event.inputs.batch_size }}"
          echo "time_to_run: ${{ github.event.inputs.time_to_run }}"
          echo "mid_site: ${{ github.event.inputs.mid_site }}"
          echo "Lx: ${{ github.event.inputs.Lx }}"
          echo "Ly: ${{ github.event.inputs.Ly }}"
          echo "batch_index: ${{ matrix.batch_index }}"
          echo "================================"

      - name: Run batch #${{ matrix.batch_index }}
        timeout-minutes: 3000  # Increased to 50 hours
        run: |
          python simple_autocorrelators/launch_one_batch.py \
            --time           "${{ github.event.inputs.time_to_run }}" \
            --mid_site       "${{ github.event.inputs.mid_site }}" \
            --Lx             "${{ github.event.inputs.Lx }}" \
            --Ly             "${{ github.event.inputs.Ly }}" \
            --batch_size     "${{ github.event.inputs.batch_size }}" \
            --batch_index    "${{ matrix.batch_index }}" \
            --runner-script  simple_autocorrelators/runner_ac_data.py

      - name: Debug - Check output files
        run: |
          echo "=== DEBUG: Output Directory Contents ==="
          find results/ -type f -name "*.csv" | head -10
          echo "Total CSV files: $(find results/ -name "*.csv" | wc -l)"
          echo "Directory structure:"
          ls -la results/ || echo "No results directory found"
          echo "========================================"

      - name: Check memory after
        run: free -m

      - name: Upload batch-specific results
        uses: actions/upload-artifact@v4
        with:
          name: rydberg-results-batch-${{ matrix.batch_index }}
          path: results/
